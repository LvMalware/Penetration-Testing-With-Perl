#!/usr/bin/env perl

=head1 NAME

  livehost_ping - ping every address in subnet to discover hosts

=head1 SYNOPSIS

  livehost_ping <CIDR> [tcp|udp|icmp|syn] [timeout secs]

Examples

  $ ./livehost_ping 192.168.1.0/24
  Starting scan
    192.168.1.2
    192.168.1.5
    192.168.1.6
    192.168.1.9

  $ ./livehost_ping 192.168.1.0/24 udp 3
  ...

=head1 PRE-REQS

Requires the L<Net::Netmask|https://metacpan/pod/Net::Netmask> module

=cut

use strict;
use warnings;
use Net::Ping;
use Net::Netmask;
use POSIX 'WNOHANG';

die "Usage:\n\tlivehost_ping <subnet mask> [tcp|udp|icmp|syn] [timeout secs]\n"
  unless @ARGV;

my $netmask = Net::Netmask->new2(shift) or die Net::Netmask::errstr;

print "Starting scan\n";
for my $ip_address ($netmask->enumerate)
{
  my $parent = fork();
  unless ($parent)
  {
    # do this here to keep the msg sequence at 1 for each host pinged
    my $sender  = Net::Ping->new(shift || 'tcp', shift || 5);
    if ($sender->ping($ip_address))
    {
      if ($sender->{proto} eq 'syn')
      {
        # wait for ACK response or timeout
        exit 0 unless $sender->ack($ip_address);
      }
      print "  $ip_address\n";
    }
    exit 0;
  }
}
# wait on forked processes to finish
until (waitpid(-1, WNOHANG) == -1) {};
print "Exiting\n";
